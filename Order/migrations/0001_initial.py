# Generated by Django 5.2.6 on 2025-09-22 10:13

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Product', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, help_text='Unique order identifier (e.g., ORD-12345678)', max_length=20, unique=True)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_phone', models.CharField(blank=True, max_length=20)),
                ('shipping_first_name', models.CharField(max_length=50)),
                ('shipping_last_name', models.CharField(max_length=50)),
                ('shipping_address_line_1', models.CharField(max_length=200)),
                ('shipping_address_line_2', models.CharField(blank=True, max_length=200)),
                ('shipping_city', models.CharField(max_length=100)),
                ('shipping_state', models.CharField(max_length=100)),
                ('shipping_postal_code', models.CharField(max_length=20)),
                ('shipping_country', models.CharField(default='United States', max_length=100)),
                ('billing_same_as_shipping', models.BooleanField(default=True)),
                ('billing_first_name', models.CharField(blank=True, max_length=50)),
                ('billing_last_name', models.CharField(blank=True, max_length=50)),
                ('billing_address_line_1', models.CharField(blank=True, max_length=200)),
                ('billing_address_line_2', models.CharField(blank=True, max_length=200)),
                ('billing_city', models.CharField(blank=True, max_length=100)),
                ('billing_state', models.CharField(blank=True, max_length=100)),
                ('billing_postal_code', models.CharField(blank=True, max_length=20)),
                ('billing_country', models.CharField(blank=True, max_length=100)),
                ('subtotal', models.DecimalField(decimal_places=2, help_text='Total before shipping and tax', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Final total amount', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Special instructions or notes from customer')),
                ('shipping_method', models.CharField(default='Standard Shipping', help_text='Selected shipping method', max_length=100)),
                ('estimated_delivery_date', models.DateField(blank=True, null=True)),
                ('tracking_number', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(help_text='Customer who placed the order', on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(help_text='Product name at time of order', max_length=200)),
                ('product_sku', models.CharField(help_text='Product SKU at time of order', max_length=100)),
                ('quantity', models.PositiveIntegerField(help_text='Quantity ordered', validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit at time of order', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total price for this item (unit_price * quantity)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(help_text='Order this item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='Order.order')),
                ('product', models.ForeignKey(help_text='Product being ordered', on_delete=django.db.models.deletion.CASCADE, to='Product.product')),
                ('variant', models.ForeignKey(blank=True, help_text='Product variant (size, color, etc.)', null=True, on_delete=django.db.models.deletion.CASCADE, to='Product.productvariant')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='Order.order')),
            ],
            options={
                'verbose_name': 'Order Status History',
                'verbose_name_plural': 'Order Status Histories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(blank=True, help_text='Unique transaction identifier', max_length=50, unique=True)),
                ('transaction_type', models.CharField(choices=[('payment', 'Payment'), ('refund', 'Refund'), ('partial_refund', 'Partial Refund')], default='payment', max_length=20)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('paypal', 'PayPal'), ('stripe', 'Stripe'), ('bank_transfer', 'Bank Transfer'), ('cash_on_delivery', 'Cash on Delivery')], help_text='Payment method used', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('gateway', models.CharField(default='Mock Payment Gateway', help_text='Payment processor used', max_length=50)),
                ('gateway_transaction_id', models.CharField(blank=True, help_text='Transaction ID from payment gateway', max_length=100)),
                ('payment_details', models.JSONField(default=dict, help_text='Payment method details (masked for security)')),
                ('gateway_response', models.JSONField(default=dict, help_text='Response data from payment gateway')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True, help_text='Reason for transaction failure')),
                ('order', models.OneToOneField(help_text='Order this transaction belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='transaction', to='Order.order')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_id'], name='Order_order_order_i_8d62ab_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user', 'status'], name='Order_order_user_id_c6a16d_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['created_at'], name='Order_order_created_faca63_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['payment_status'], name='Order_order_payment_eb3bb8_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order', 'product'], name='Order_order_order_i_9e909d_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_id'], name='Order_trans_transac_ec46bf_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['order'], name='Order_trans_order_i_daf73d_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status'], name='Order_trans_status_c50b25_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['created_at'], name='Order_trans_created_1f0f59_idx'),
        ),
    ]
